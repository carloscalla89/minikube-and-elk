alloy:
  configMap:
    content: |-
      // === Receptor OTLP ===
      otelcol.receiver.otlp "default" {
        // Habilita gRPC en el puerto 4317
        grpc {
          endpoint = "0.0.0.0:4317"
        }
        // Habilita HTTP en el puerto 4318
        http {
          endpoint = "0.0.0.0:4318"
        }
        output {
          // Envía métricas y trazas al procesador batch
          // metrics = [otelcol.processor.batch.default.input]
          traces  = [otelcol.processor.batch.default.input]
        }
      }

      // === Procesador batch ===
      otelcol.processor.batch "default" {
        // Agrupa datos antes de exportarlos
        timeout = "10s"
        output {
          // Envía al exporter OTLP
          // metrics = [otelcol.exporter.otlp.tempo.input]
          traces  = [otelcol.exporter.otlp.tempo.input]
        }
      }

      // === Exportador OTLP (gRPC) ===
      otelcol.exporter.otlp "tempo" {
        client {
          // Endpoint dentro de tu cluster Minikube
          endpoint = "http://tempo-distributed-distributor.monitoring.svc.cluster.local:4317"
          tls {
            insecure = true
          }
        }
      }

      discovery.kubernetes "pods" {
        
        role = "pod"

        namespaces {
          own_namespace = false

          names = ["default"]
        }
      }

      prometheus.scrape "demo" {
        targets    = discovery.kubernetes.pods.targets
        forward_to = [prometheus.remote_write.demo.receiver]
      }

      prometheus.remote_write "demo" {
        endpoint {
          url = "https://sfv56284.apps.dynatrace.com"

          headers = {
            "Authorization" = "bearer token",
          }
        }
      }

    
      // === (1) Captura de logs de Kubernetes ===
      //loki.source.kubernetes "pods" {
      //  targets    = discovery.kubernetes.pods.targets
      //  forward_to = [otelcol.receiver.loki.k8s_converter.receiver]
      //}

      // 2) Convertir los logs de Loki a OTLP (LogsReceiver → Consumer)
      //otelcol.receiver.loki "k8s_converter" {
      //  output {
      //    logs = [otelcol.processor.batch.log_batch.input]
      //  }
      //}

      // 3) Batcher de logs
      //otelcol.processor.batch "log_batch" {
      //  output {
      //    logs = [otelcol.exporter.otlphttp.logstash_http.input]
      //  }
      //}

      // 4) Batcher de logs
      //otelcol.exporter.otlphttp "logstash_http" {
      //  client {
      //    endpoint = "http://host.minikube.internal:5001"
      //    tls {
      //      insecure = true
      //    }
      //  }

  

       //sending_queue {
       //   enabled           = true       // activa el búfer en memoria
       //   queue_size        = 10000      // hasta 10 000 batches en cola
       //   block_on_overflow = true       // espera en vez de retornar error
       //   num_consumers     = 5          // envíos paralelos de batches
       // }
      //}

  extraPorts:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP

prometheus:
  prometheusSpec:
    # Envía las métricas scrapeadas por Alloy a Dynatrace
    remoteWrite:
      - url: "https://sfv56284.apps.dynatrace.com/ui/api/v2/metrics/ingest"
        bearerToken: "<token>"
        tlsConfig:
          insecureSkipVerify: false    